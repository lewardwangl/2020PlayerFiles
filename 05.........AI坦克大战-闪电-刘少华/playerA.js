
window.playerA = new (class PlayerControl {
    
    constructor(type) {
        this.type = type;
        this.svMoveEv = new CustomEvent("keydown");
        this.svFireEv = new CustomEvent("keydown");
        this.firetimestamp = (new Date()).valueOf();
        this.svMyTank;
        this.enemyTank 
        this.myBullets = [];
        this.enemyBullets = [];
        this.svType = type;
        this.TANK_SPEED = 7;
        this.TANK_WIDTH = 50;
        this.BULLET_WIDTH = 10;
        this.dangerBullets = [];
        this.CHECK_STEP = 25;
        this.DANGER_STEP = 18;
        this.NO_COLLIDE = -1;
        this.BEST_SCORE = 1000;
        this.WORST_SCORE = -1000;
        this.svAllDirections = [this.DIRECTION.UP, this.DIRECTION.DOWN, this.DIRECTION.LEFT, this.DIRECTION.RIGHT, this.DIRECTION.STOP];
        this.svNoStopDirections = [this.DIRECTION.UP, this.DIRECTION.DOWN,  this.DIRECTION.LEFT, this.DIRECTION.RIGHT];
        this.loopCount = 0;
        
        this.DANGER_DISTANCE = 3 * this.TANK_WIDTH;
        this.BEST_FIRE_DISTANCE = 4 * this.TANK_WIDTH;
        
        this.FIRE_MAX_DISTANCE = this.DANGER_DISTANCE + 2 * this.TANK_WIDTH;
        
        this.UNSAFE_APPROACH_DISTANCE = this.DANGER_DISTANCE + this.TANK_WIDTH/2;

        this.MAX_DEDUCE_COUNT = 2;
        this.MAX_DEDUCE_COUNT_FOR_ONE_DIR = 15;

        this.TANK_MOVE_DANGER_STEP = this.MAX_DEDUCE_COUNT + 1;

        this.targetTankInfo = [];
        this.DEBUG = false;

        this.shouldFireLoopTimes = [];
        this.imaginaryMetalBullets = [];
        this.IMGINARY_BULLET_WIDTH = 100;

        this.allEnemyTank = [];
        this.BEST_DISTANCE_OF_CENTER = 55;
        
        this.MIN_FIRE_INTERVAL = 0;
        
        this.lastEnemyDirectionFire = 0;
        this.METAL_WIDTH = 100;
        this.MAX_DISTANCE = 0;
        this.MIN_FIRE_OFFSET = (this.TANK_WIDTH + this.BULLET_WIDTH)/2;
        this.SUPER_MIN_FIRE_OFFSET = this.MIN_FIRE_OFFSET;

        this.myCollideNum = 0;
        this.enemyCollideNum = 0;

        this.allEnemyBullets = [];
        this.allAITankCount = 0;
        this.superAttackDirections = [];
        this.firstAttackLoopCount = 0;
        this.SUPER_ATTACK_DISTANCE = 2 * this.TANK_WIDTH;
        this.SUPER_ATTACH_MAX_DISTANCE = 12 * this.TANK_WIDTH;
        this.inSuperAttackMode = false;
    }

    land() {                this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"] = undefined;        this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"] = undefined;                aMyTankCount["\x66\x6f\x72\x45\x61\x63\x68"](element => {            var dHX_$Nriq1 = element;            if (dHX_$Nriq1['\x69\x64'] == 100) {                this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"] = dHX_$Nriq1;            }            if (dHX_$Nriq1['\x69\x64'] == 200) {                this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"] = dHX_$Nriq1;            }        });                this["\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"] = aMyBulletCount1;        this["\x65\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"] = aMyBulletCount2;        this["\x6d\x79\x43\x6f\x6c\x6c\x69\x64\x65\x4e\x75\x6d"] = player1CollideNum;        this["\x65\x6e\x65\x6d\x79\x43\x6f\x6c\x6c\x69\x64\x65\x4e\x75\x6d"] = player2CollideNum;        if (!this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]) return name;        this["\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = (canvas["\x77\x69\x64\x74\x68"] + canvas["\x68\x65\x69\x67\x68\x74"])*2;        if (this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] === 0) {                        this["\x61\x6c\x6c\x41\x49\x54\x61\x6e\x6b\x43\x6f\x75\x6e\x74"] = aTankCount["\x6c\x65\x6e\x67\x74\x68"];        }                this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x70\x75\x73\x68"]["\x61\x70\x70\x6c\x79"](this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"], aTankCount);        if (this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"] && this["\x69\x73\x43\x6f\x75\x6e\x74\x65\x72\x53\x74\x72\x69\x6b\x65"]()) {            this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x70\x75\x73\x68"](this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]);        }        if (this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x6c\x65\x6e\x67\x74\x68"] === 0) {            return name;        }        if (this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] === 0 && this["\x69\x73\x43\x6f\x75\x6e\x74\x65\x72\x53\x74\x72\x69\x6b\x65"]()) {            this["\x63\x72\x65\x61\x74\x65\x49\x6d\x61\x67\x69\x6e\x61\x72\x79\x42\x75\x6c\x6c\x65\x74\x73"]();        }        this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"]++;        this["\x6c\x6f\x67"]("\x73\x74\x61\x72\x74\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3e");        this["\x65\x72\x72\x6f\x72"]("\u8fdb\u884c\u7b2c" + this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] + "\u6b21\u5faa\u73af");        let array = this["\x74\x72\x61\x63\x65\x41\x6e\x64\x46\x69\x72\x65\x56\x32"]();        let direction = array[0];        let targetTank = array[1];        let shouldFire = array[2];        if (this["\x69\x73\x43\x6f\x75\x6e\x74\x65\x72\x53\x74\x72\x69\x6b\x65"]() && this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2] === this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"] && this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x6c\x65\x6e\x67\x74\x68"] <= 10) {            this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"] = 15;        } else {            this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"] = 18;        }        this["\x6c\x6f\x67"]("\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50", this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"]);        let finalDirection = this["\x43\x68\x65\x63\x6b\x49\x66\x49\x6e\x64\x61\x6e\x67\x65\x72\x41\x6e\x64\x41\x76\x6f\x69\x64"](direction);        if (finalDirection !== direction) {                        this["\x69\x6e\x53\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x4d\x6f\x64\x65"] = false;        }                if (finalDirection === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"] && this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] - this["\x6c\x61\x73\x74\x45\x6e\x65\x6d\x79\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x46\x69\x72\x65"] >= 80 && this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x6c\x65\x6e\x67\x74\x68"] >= 1 && targetTank !==this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {            shouldFire = true;            this["\x6c\x61\x73\x74\x45\x6e\x65\x6d\x79\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x46\x69\x72\x65"] = this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"];        }                shouldFire ||= this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4f\x6e\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"](finalDirection);                if (shouldFire && this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"]["\x6c\x65\x6e\x67\x74\x68"] < 5) {            this["\x6c\x6f\x67"]("\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65", this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"]);            let shouldFireLoopTime = this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] + 1;            if (this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"]["\x6c\x65\x6e\x67\x74\x68"] > 0) {                                if (this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"][this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"]["\x6c\x65\x6e\x67\x74\x68"]-1] !== this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"]) {                    this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"]["\x70\x75\x73\x68"](shouldFireLoopTime);                }            } else {                this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"]["\x70\x75\x73\x68"](shouldFireLoopTime);            }        }        this["\x53\x56\x4d\x6f\x76\x65"](finalDirection);                for(let i=0; i<this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let fireLoopTime = this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"][i];            if (fireLoopTime === this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] && finalDirection === direction) {                this["\x6c\x6f\x67"]("\x72\x65\x61\x6c \x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65");                this["\x53\x56\x46\x69\x72\x65"]();            }            if (fireLoopTime <= this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"]) {                this["\x73\x68\x6f\x75\x6c\x64\x46\x69\x72\x65\x4c\x6f\x6f\x70\x54\x69\x6d\x65\x73"]["\x73\x70\x6c\x69\x63\x65"](i, 1);                i--;            }        }        this["\x6c\x6f\x67"]("\x65\x6e\x64\x3c\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d");        this["\x73\x65\x74\x4e\x61\x6d\x65"]();    }    leave() {        this["\x73\x65\x74\x4e\x61\x6d\x65"]();        window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]["\x6f\x6e\x6b\x65\x79\x75\x70"](this["\x73\x76\x4d\x6f\x76\x65\x45\x76"]);        window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]["\x6f\x6e\x6b\x65\x79\x75\x70"](this["\x73\x76\x46\x69\x72\x65\x45\x76"]);        if (this["\x44\x45\x42\x55\x47"]) {            for(let i=0; i<this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {                this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"][i]["\x63\x6f\x6c\x6f\x72"] = '\x79\x65\x6c\x6c\x6f\x77';            }        }        this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"] = [];        this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"] = [];        this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"] = [];        if (this["\x44\x45\x42\x55\x47"]) {                    }    }    type;        DIRECTION = {        UP: 0,        RIGHT: 1,        DOWN: 2,        LEFT: 3,        STOP: 4,    };    getName() {        return "\u95ea\u7535";    }    isBulletInDirection(myBullet, finalDirection, targetTank) {        let direction = finalDirection;        if (direction === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"]) {            direction = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"];        }        if (myBullet["\x58"] - this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] === this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2) {            if ((direction === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"] && myBullet["\x59"] < this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] && myBullet["\x59"] > targetTank["\x59"]) || (direction === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"] && myBullet["\x59"] > this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] && myBullet["\x59"] < targetTank["\x59"])) {                return true;            }        } else if (myBullet["\x59"] - this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] === this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2) {            if ((direction === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"] && myBullet["\x58"] < this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] && myBullet["\x58"] > targetTank["\x58"]) || (direction === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"] && myBullet["\x58"] > this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] && myBullet["\x58"] < targetTank["\x58"])) {                return true;            }        }        return false;    }    hasMyBulletInDirection(direction, targetTank) {        for(let i=0;i<this["\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let myBullet = this["\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"][i];            if (this["\x69\x73\x42\x75\x6c\x6c\x65\x74\x49\x6e\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"](myBullet, direction, targetTank)) {                return true;            }        }        return false;    }        shouldFireOnDirection(direction) {        if (direction === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"]) {            direction = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"];        }                        let info = this["\x67\x65\x74\x54\x61\x6e\x6b\x41\x6e\x64\x42\x75\x6c\x6c\x65\x74\x73\x49\x6e\x66\x6f\x4f\x6e\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"](direction);        let tankCount = info[0];        let myBulletCount = info[1];        let nearestDistance = info[2];        if (tankCount <= 0) {            return false;        }        this["\x65\x72\x72\x6f\x72"]("\x6e\x65\x61\x72\x65\x73\x74\x44\x69\x73\x74\x61\x6e\x63\x65", nearestDistance);        if (nearestDistance <= canvas["\x77\x69\x64\x74\x68"]*3/4) {            let spareNum = 1;            if (this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2] === this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {                spareNum = 0;            }            if (myBulletCount < tankCount+spareNum) {                return true;            }        } else {            let maxBulletsCount = 2;            if (this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2] === this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {                maxBulletsCount = 1;            }            if (myBulletCount < maxBulletsCount) {                return true;            }        }        return false;    }    getTankAndBulletsInfoOnDirections(direction) {        let tankCount = 0;        let myBulletCount = 0;        let minYOnUp = canvas["\x68\x65\x69\x67\x68\x74"];        let maxYOnUp = -1;        let minYOnDown = canvas["\x68\x65\x69\x67\x68\x74"];        let maxYOnDown = -1;        let minXOnLeft = canvas["\x77\x69\x64\x74\x68"];        let maxXOnLeft = -1;        let minXOnRight = canvas["\x77\x69\x64\x74\x68"];        let maxXOnRight = -1;        let nearestDistance = 0;        for(let i=0;i<this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x6c\x65\x6e\x67\x74\x68"];i++) {            let enemy = this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"][i];            if (this["\x69\x73\x42\x6c\x6f\x63\x6b\x42\x79\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], enemy)) {                continue;            }            switch (direction) {                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - enemy["\x58"]) < this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && enemy["\x59"] < this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"]) {                        tankCount ++;                        if (enemy["\x59"] < minYOnUp) {                            minYOnUp = enemy["\x59"];                        }                        if (enemy["\x59"] > maxYOnUp) {                            maxYOnUp = enemy["\x59"];                            nearestDistance = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - maxYOnUp;                        }                    }                    break;                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - enemy["\x59"]) < this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && enemy["\x58"] > this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"]) {                        tankCount ++;                        if (enemy["\x58"] > maxXOnRight) {                            maxXOnRight = enemy["\x58"];                        }                        if (enemy["\x58"] < minXOnRight) {                            minXOnRight = enemy["\x58"];                            nearestDistance = minXOnRight - this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"];                        }                    }                    break;                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - enemy["\x58"]) < this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && enemy["\x59"] > this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"]) {                        tankCount ++;                        if (enemy["\x59"] > maxYOnDown) {                            maxYOnDown = enemy["\x59"];                        }                        if (enemy["\x59"] < minYOnDown) {                            minYOnDown = enemy["\x59"];                            nearestDistance = minYOnDown - this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"];                        }                    }                    break;                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - enemy["\x59"]) < this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && enemy["\x58"] < this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"]) {                        tankCount ++;                        if (enemy["\x58"] < minXOnLeft) {                            minXOnLeft = enemy["\x58"];                        }                        if (enemy["\x58"] > maxXOnLeft) {                            maxXOnLeft = enemy["\x58"];                            nearestDistance = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - maxXOnLeft;                        }                    }                    break;            }        }        for(let i=0;i<this["\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"];i++) {            let bullet = this["\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"][i];            switch (direction) {                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - bullet["\x58"]) < this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] && bullet["\x59"] < this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] && bullet["\x59"] > minYOnUp) {                        myBulletCount ++;                    }                    break;                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - bullet["\x59"]) < this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] && bullet["\x58"] > this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] && bullet["\x58"] < maxXOnRight) {                        myBulletCount ++;                    }                    break;                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - bullet["\x58"]) < this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] && bullet["\x59"] > this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] && bullet["\x59"] < maxYOnDown) {                        myBulletCount ++;                    }                    break;                case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"]:                    if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - bullet["\x59"]) < this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] && bullet["\x58"] < this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] && bullet["\x58"] > minXOnLeft) {                        myBulletCount ++;                    }                    break;            }        }        return [tankCount, myBulletCount, nearestDistance];            }    createImaginaryBullets() {        let w = canvas["\x77\x69\x64\x74\x68"];        let h = canvas["\x68\x65\x69\x67\x68\x74"];        let imaginaryBullet1 = new Bullet('\x6d\x65\x74\x61\x6c\x31', 0, 1, 4, w/4, h/4);        let imaginaryBullet2 = new Bullet('\x6d\x65\x74\x61\x6c\x32', 0, 1, 4, w*3/4, h/4);        let imaginaryBullet3 = new Bullet('\x6d\x65\x74\x61\x6c\x33', 0, 1, 4, w/4, h*3/4);        let imaginaryBullet4 = new Bullet('\x6d\x65\x74\x61\x6c\x34', 0, 1, 4, w*3/4, h*3/4);        imaginaryBullet1["\x77\x69\x64\x74\x68"] = this["\x49\x4d\x47\x49\x4e\x41\x52\x59\x5f\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"];        imaginaryBullet2["\x77\x69\x64\x74\x68"] = this["\x49\x4d\x47\x49\x4e\x41\x52\x59\x5f\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"];        imaginaryBullet3["\x77\x69\x64\x74\x68"] = this["\x49\x4d\x47\x49\x4e\x41\x52\x59\x5f\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"];        imaginaryBullet4["\x77\x69\x64\x74\x68"] = this["\x49\x4d\x47\x49\x4e\x41\x52\x59\x5f\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"];        this["\x69\x6d\x61\x67\x69\x6e\x61\x72\x79\x4d\x65\x74\x61\x6c\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"](imaginaryBullet1);        this["\x69\x6d\x61\x67\x69\x6e\x61\x72\x79\x4d\x65\x74\x61\x6c\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"](imaginaryBullet2);        this["\x69\x6d\x61\x67\x69\x6e\x61\x72\x79\x4d\x65\x74\x61\x6c\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"](imaginaryBullet3);        this["\x69\x6d\x61\x67\x69\x6e\x61\x72\x79\x4d\x65\x74\x61\x6c\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"](imaginaryBullet4);    }        CheckIfIndangerAndAvoid(inputDirection) {        this["\x6c\x6f\x67"]("\x69\x6e\x70\x75\x74 \x64\x69\x72\x65\x63\x74\x69\x6f\x6e \x3a ", this["\x53\x56\x47\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x53\x74\x72"](inputDirection));        let finalDirection = inputDirection;                let crash = false;                let totalScore = 0;        let allCollideTime = "";        let allScore = "";                this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"]["\x61\x70\x70\x6c\x79"](this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"], aBulletCount);        if (this["\x69\x73\x43\x6f\x75\x6e\x74\x65\x72\x53\x74\x72\x69\x6b\x65"]()) {            this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"]["\x61\x70\x70\x6c\x79"](this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"], this["\x65\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]);        }        this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"]["\x61\x70\x70\x6c\x79"](this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"], this["\x69\x6d\x61\x67\x69\x6e\x61\x72\x79\x4d\x65\x74\x61\x6c\x42\x75\x6c\x6c\x65\x74\x73"]);        for (let i = 0; i < this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let bullet = this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"][i];            if (!bullet["\x68\x61\x73\x4f\x77\x6e\x50\x72\x6f\x70\x65\x72\x74\x79"]("\x77\x69\x64\x74\x68")) {                bullet["\x77\x69\x64\x74\x68"] = bulletWidth;            }            let disHor = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - bullet["\x58"];            let disVer = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - bullet["\x59"];            let dangerDis = tankWidth * 5;                        bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"] = -2;             if (window["\x4d\x61\x74\x68"]["\x70\x6f\x77"](disHor, 2) + window["\x4d\x61\x74\x68"]["\x70\x6f\x77"](disVer, 2) <= window["\x4d\x61\x74\x68"]["\x70\x6f\x77"](dangerDis, 2)) {                                if (this["\x44\x45\x42\x55\x47"]) {                    bullet["\x63\x6f\x6c\x6f\x72"] = '\x72\x65\x64';                }                                let array = this["\x67\x65\x74\x42\x75\x6c\x6c\x65\x74\x53\x63\x6f\x72\x65\x49\x6e\x66\x6f"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], bullet, 1);                if (array[0]) {                    crash = true;                }                totalScore += array[1];                allCollideTime += array[2] + " \x7c ";                allScore += array[1] + " ";                this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"]["\x70\x75\x73\x68"](bullet);            }        }        let currentPositionScore = this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"];        if (this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"] > 0) {            this["\x6c\x6f\x67"]("\x69\x6e \x64\x61\x6e\x67\x65\x72\x21\x21\x21");            this["\x6c\x6f\x67"]("\x61\x6c\x6c\x43\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65\x31", allCollideTime);            this["\x6c\x6f\x67"]("\x61\x6c\x6c\x53\x63\x6f\x72\x65\x31", allScore);            this["\x6c\x6f\x67"]("\x74\x6f\x74\x61\x6c\x53\x63\x6f\x72\x65\x31", totalScore);            this["\x6c\x6f\x67"]("\x62\x75\x6c\x6c\x65\x74\x73 \x63\x6f\x75\x6e\x74", this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]);            if (crash) {                currentPositionScore = this["\x57\x4f\x52\x53\x54\x5f\x53\x43\x4f\x52\x45"];            }            currentPositionScore = totalScore/this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"];        } else {            this["\x6c\x6f\x67"]("\x73\x61\x66\x65\x21\x21\x21");        }        this["\x6c\x6f\x67"]("\x63\x75\x72\x72\x65\x6e\x74\x50\x6f\x73\x69\x74\x69\x6f\x6e\x53\x63\x6f\x72\x65\x3a", currentPositionScore);        if (currentPositionScore < this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"]) {            this["\x65\x72\x72\x6f\x72"]("\u68c0\u6d4b\u6709\u5371\u9669\uff0c\u904d\u5386\u5404\u4e2a\u65b9\u5411\u83b7\u53d6\u5f97\u5206");                                    finalDirection = this["\x66\x69\x6e\x64\x52\x65\x63\x6f\x6d\x6d\x65\x6e\x64\x50\x61\x74\x68"](this["\x73\x76\x41\x6c\x6c\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"], currentPositionScore);        } else {                        this["\x6c\x6f\x67"]("\u68c0\u6d4b\u6ca1\u6709\u5371\u9669\uff0c\u4f7f\u7528\u8f93\u5165\u65b9\u5411\u8fdb\u884c\u63a8\u6f14");            let array = this["\x73\x63\x6f\x72\x65\x4f\x66\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"]([finalDirection], 1);            let score = array[0];            this["\x6c\x6f\x67"]("\u63a8\u6f14\u540e\u5f97\u5206\uff1a" + score);            if (score < currentPositionScore) {                this["\x65\x72\x72\x6f\x72"]("\u4f7f\u7528\u8f93\u5165\u65b9\u5411\u63a8\u6f14\u6709\u5371\u9669");                                let tempDirections = [];                this["\x73\x76\x41\x6c\x6c\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x66\x6f\x72\x45\x61\x63\x68"](direction => {                                        if (direction !== finalDirection) {                        tempDirections["\x70\x75\x73\x68"](direction);                    }                });                finalDirection = this["\x66\x69\x6e\x64\x52\x65\x63\x6f\x6d\x6d\x65\x6e\x64\x50\x61\x74\x68"](tempDirections, score);            }        }        this["\x6c\x6f\x67"]("\x66\x69\x6e\x61\x6c\x44\x69\x72\x65\x63\x74\x69\x6f\x6e", this["\x53\x56\x47\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x53\x74\x72"](finalDirection));                return finalDirection;    }    findRecommendPath(inputDirections, currentScore) {        let standByPath = undefined;        let bestPath = undefined;        let paths = [];        inputDirections["\x66\x6f\x72\x45\x61\x63\x68"](direction => {            let movements = [];            movements["\x70\x75\x73\x68"](this["\x4d\x6f\x76\x65\x6d\x65\x6e\x74"](direction, 0));            let path = this["\x50\x61\x74\x68"]();            path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"] = movements;            paths["\x70\x75\x73\x68"](path);        });        let recommendPath = undefined;        for(let i=1; i<=this["\x4d\x41\x58\x5f\x44\x45\x44\x55\x43\x45\x5f\x43\x4f\x55\x4e\x54"]; i++) {            let array = this["\x64\x65\x64\x75\x63\x65"](paths, i);            paths = array[0];            bestPath = array[1];            standByPath = array[2];            if (bestPath !== undefined) {                recommendPath = bestPath;                break;            } else if (standByPath !== undefined) {                recommendPath = standByPath;                break;            }        }        let finalDirection;        let highestScore = this["\x57\x4f\x52\x53\x54\x5f\x53\x43\x4f\x52\x45"];        if (recommendPath !== undefined) {                        this["\x6c\x6f\x67"]("\x66\x69\x6e\x64 \x62\x65\x73\x74 \x70\x61\x74\x68 \x3a ", recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"]);            this["\x6c\x6f\x67"]("\u6700\u7ec8\u63a8\u6f14\u63a8\u8350\u8def\u5f84\uff1a", recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"]);            highestScore = recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]-1]["\x73\x63\x6f\x72\x65"];            finalDirection = recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][0]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"];        } else {                        let array = this["\x64\x65\x64\x75\x63\x65\x46\x6f\x72\x4f\x6e\x65\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"]();            finalDirection = array[0];            let highestScoreFromDeepDeduce = array[1];            this["\x6c\x6f\x67"]("\x66\x69\x6e\x61\x6c \x64\x69\x72\x65\x63\x74\x69\x6f\x6e \x66\x72\x6f\x6d \x64\x65\x65\x70 \x64\x65\x64\x75\x63\x65 \x69\x73 " , finalDirection);            if (highestScoreFromDeepDeduce === this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"]) {                highestScore = highestScoreFromDeepDeduce;            } else {                                this["\x6c\x6f\x67"]("\x6e\x6f\x74 \x66\x69\x6e\x64 \x62\x65\x73\x74 \x70\x61\x74\x68 \x61\x6e\x64 \x70\x61\x74\x68\x73 \x63\x6f\x75\x6e\x74 \x3a ", paths["\x6c\x65\x6e\x67\x74\x68"]);                                paths["\x73\x6f\x72\x74"](this["\x73\x6f\x72\x74\x50\x61\x74\x68\x73"]);                if (paths["\x6c\x65\x6e\x67\x74\x68"] > 0) {                    recommendPath = paths[0];                    let tempHighestScore = recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]-1]["\x73\x63\x6f\x72\x65"];                                        if (tempHighestScore > highestScoreFromDeepDeduce) {                        highestScore = tempHighestScore;                        finalDirection = recommendPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][0]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"];                    }                }                let pathes = "\x70\x61\x74\x68\x73 \x66\x72\x6f\x6d \x64\x65\x64\x75\x63\x65\x32 \x3a ";                for(let i=0;i<paths["\x6c\x65\x6e\x67\x74\x68"];i++) {                    let path = paths[i];                    pathes += "\x5b" + path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][0]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] + "\x2d" + path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][0]["\x73\x63\x6f\x72\x65"] + "\x2c " + path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][1]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] + "\x2d" + path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][1]["\x73\x63\x6f\x72\x65"] + "\x5d\x2c ";                }                this["\x6c\x6f\x67"]("\x70\x61\x74\x68\x32\x3a", pathes);            }        }        this["\x6c\x6f\x67"]("\x68\x69\x67\x68\x65\x73\x74 \x73\x63\x6f\x72\x65 \x69\x73 ", highestScore);        if (highestScore >= currentScore) {            this["\x6c\x6f\x67"]("\x66\x69\x6e\x61\x6c \x75\x73\x65 \x74\x68\x69\x73 \x64\x69\x72\x65\x63\x74\x69\x6f\x6e", this["\x53\x56\x47\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x53\x74\x72"](finalDirection));        } else {            this["\x65\x72\x72\x6f\x72"]("\x53\x54\x4f\x50 \x3a \u9700\u8981\u63d0\u524d\u8fdb\u884c\u6df1\u4e00\u5c42\u63a8\u6f14");        }        return finalDirection;    }    deduceForOneDirection() {        let highestScore = this["\x57\x4f\x52\x53\x54\x5f\x53\x43\x4f\x52\x45"];        let directionOnNoBest = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];        for(let k=0;k<this["\x73\x76\x4e\x6f\x53\x74\x6f\x70\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x6c\x65\x6e\x67\x74\x68"];k++) {            let direction = this["\x73\x76\x4e\x6f\x53\x74\x6f\x70\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"][k];            let crash = false;            for(let i=1;i<=this["\x4d\x41\x58\x5f\x44\x45\x44\x55\x43\x45\x5f\x43\x4f\x55\x4e\x54\x5f\x46\x4f\x52\x5f\x4f\x4e\x45\x5f\x44\x49\x52"] && !crash; i++) {                let score = this["\x73\x63\x6f\x72\x65\x4f\x66\x4e\x53\x61\x6d\x65\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"](direction, i);                                if (score > highestScore && i>2) {                    highestScore = score;                    directionOnNoBest = direction;                }                if (score > 0) {                    if (score === this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"]) {                        return [direction, this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"]];                    }                } else {                    crash = true;                                        this["\x65\x72\x72\x6f\x72"]("\x6e\x6f \x62\x65\x73\x74 \x73\x63\x6f\x72\x65 \x69\x6e \x74\x68\x69\x73 \x64\x65\x72\x65\x63\x74\x69\x6f\x6e", this["\x53\x56\x47\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x53\x74\x72"](direction));                }            }        }                return [directionOnNoBest, highestScore];    }    deduce(paths, step) {        if (step === 1) {                        let resultPaths = [];                        let standByPath = undefined;                        let bestPath = undefined;            this["\x6c\x6f\x67"]("\x64\x65\x64\x75\x63\x65\x31\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3e");            for(let i=0;i<paths["\x6c\x65\x6e\x67\x74\x68"];i++) {                let path = paths[i];                let direction = path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][0]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"];                let array = this["\x73\x63\x6f\x72\x65\x4f\x66\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"]([direction], 1);                let score = array[0];                let imaginaryTank = array[1];                if (score > 0) {                    path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"][0]["\x73\x63\x6f\x72\x65"] = score;                    resultPaths["\x70\x75\x73\x68"](path);                    if (score === this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"]) {                                                let scoreOfPosition = this["\x69\x6d\x61\x67\x69\x6e\x61\x72\x79\x54\x61\x6e\x6b\x50\x6f\x73\x69\x74\x69\x6f\x6e\x53\x63\x6f\x72\x65"](imaginaryTank);                        if (scoreOfPosition < 0) {                            standByPath = path;                        } else {                            bestPath = path;                            break;                        }                    }                }            }            this["\x6c\x6f\x67"]("\x64\x65\x64\x75\x63\x65\x31\x3c\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d");            return [resultPaths, bestPath, standByPath];        } else {            this["\x6c\x6f\x67"]("\x64\x65\x64\x75\x63\x65" + step + "\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3e");            let standbyPath = undefined;            let bestPath = undefined;            let finalPaths = [];            let findBest = false;            for(let j=0;j<paths["\x6c\x65\x6e\x67\x74\x68"];j++) {                let path = paths[j];                let tempPaths = [];                for(let k=0; k<this["\x73\x76\x41\x6c\x6c\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x6c\x65\x6e\x67\x74\x68"]; k++) {                    let direction = this["\x73\x76\x41\x6c\x6c\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"][k];                    let directions = [];                                        let movements = path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"];                    movements["\x66\x6f\x72\x45\x61\x63\x68"](movement => {                        directions["\x70\x75\x73\x68"](movement["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"]);                    });                    directions["\x70\x75\x73\x68"](direction);                    let array = this["\x73\x63\x6f\x72\x65\x4f\x66\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"](directions, step);                    let score = array[0];                    let imaginaryTank = array[1];                    if (score > 0) {                        let tempPath = this["\x50\x61\x74\x68"]();                        let tempMovements = [];                        let tempMovement = this["\x4d\x6f\x76\x65\x6d\x65\x6e\x74"](direction, score);                        tempMovements["\x70\x75\x73\x68"]["\x61\x70\x70\x6c\x79"](tempMovements, movements);                        tempMovements["\x70\x75\x73\x68"](tempMovement);                        tempPath["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"] = tempMovements;                        tempPaths["\x70\x75\x73\x68"](tempPath);                        if (score === this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"]) {                                                                                    let scoreOfPosition = this["\x69\x6d\x61\x67\x69\x6e\x61\x72\x79\x54\x61\x6e\x6b\x50\x6f\x73\x69\x74\x69\x6f\x6e\x53\x63\x6f\x72\x65"](imaginaryTank);                            if (scoreOfPosition < 0) {                                standbyPath = tempPath;                            } else {                                bestPath = tempPath;                                findBest = true;                                break;                            }                        }                    }                }                finalPaths["\x70\x75\x73\x68"]["\x61\x70\x70\x6c\x79"](finalPaths, tempPaths);                if (findBest) {                    break;                }            }            this["\x6c\x6f\x67"]("\x64\x65\x64\x75\x63\x65" + step + "\x3c\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d\x3d");            return [finalPaths, bestPath, standbyPath];        }    }        scoreOfNSameDirections(direction, step) {        let imaginaryTank = this["\x63\x6f\x70\x79\x4f\x66\x54\x61\x6e\x6b"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]);        imaginaryTank["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = direction;        let bullets = this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"];        this["\x70\x72\x69\x6e\x74\x4d\x6f\x76\x61\x62\x6c\x65\x50\x6f\x73"]("\x62\x65\x66\x6f\x72\x65 \x6d\x6f\x76\x65", imaginaryTank);        this["\x70\x72\x69\x6e\x74\x42\x75\x6c\x6c\x65\x74\x73\x50\x6f\x73"]("\x62\x65\x66\x6f\x72\x65 \x6d\x6f\x76\x65", bullets);        let array = this["\x69\x6d\x61\x67\x69\x6e\x65\x41\x6c\x6c\x4d\x6f\x76\x65\x4e\x53\x74\x65\x70\x46\x6f\x72\x4f\x6e\x65\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"](bullets, imaginaryTank, step);        imaginaryTank = array[0];        bullets = array[1];        this["\x6c\x6f\x67"]("\u5f53\u524d\u904d\u5386\u7684\u65b9\u5411\x28" + step + "\u6b65\x29\x3d", this["\x53\x56\x47\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x53\x74\x72"](direction));        this["\x70\x72\x69\x6e\x74\x4d\x6f\x76\x61\x62\x6c\x65\x50\x6f\x73"]("\x61\x66\x74\x65\x72 \x6d\x6f\x76\x65", imaginaryTank);        this["\x70\x72\x69\x6e\x74\x42\x75\x6c\x6c\x65\x74\x73\x50\x6f\x73"]("\x61\x66\x74\x65\x72 \x6d\x6f\x76\x65", bullets);        return this["\x61\x6e\x61\x6c\x79\x7a\x65\x43\x75\x72\x72\x65\x6e\x74\x53\x69\x74\x75\x61\x74\x69\x6f\x6e"](imaginaryTank, bullets, step, direction);    }        scoreOfDirection(directions, step) {        let imaginaryTank = this["\x63\x6f\x70\x79\x4f\x66\x54\x61\x6e\x6b"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]);        let bullets = this["\x64\x61\x6e\x67\x65\x72\x42\x75\x6c\x6c\x65\x74\x73"];        this["\x70\x72\x69\x6e\x74\x4d\x6f\x76\x61\x62\x6c\x65\x50\x6f\x73"]("\x62\x65\x66\x6f\x72\x65 \x6d\x6f\x76\x65", imaginaryTank);        this["\x70\x72\x69\x6e\x74\x42\x75\x6c\x6c\x65\x74\x73\x50\x6f\x73"]("\x62\x65\x66\x6f\x72\x65 \x6d\x6f\x76\x65", bullets);        let i=0;        directions["\x66\x6f\x72\x45\x61\x63\x68"](direction => {            imaginaryTank["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = direction;            let firstStep = (i === 0);            let array = this["\x69\x6d\x61\x67\x69\x6e\x65\x41\x6c\x6c\x4d\x6f\x76\x65\x4f\x6e\x65\x53\x74\x65\x70"](bullets, imaginaryTank, firstStep);            imaginaryTank = array[0];            bullets = array[1];            this["\x6c\x6f\x67"]("\u5f53\u524d\u904d\u5386\u7684\u65b9\u5411\x3d", this["\x53\x56\x47\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x53\x74\x72"](direction));            i++;        });        this["\x70\x72\x69\x6e\x74\x4d\x6f\x76\x61\x62\x6c\x65\x50\x6f\x73"]("\x61\x66\x74\x65\x72 \x6d\x6f\x76\x65", imaginaryTank);        this["\x70\x72\x69\x6e\x74\x42\x75\x6c\x6c\x65\x74\x73\x50\x6f\x73"]("\x61\x66\x74\x65\x72 \x6d\x6f\x76\x65", bullets);        return [this["\x61\x6e\x61\x6c\x79\x7a\x65\x43\x75\x72\x72\x65\x6e\x74\x53\x69\x74\x75\x61\x74\x69\x6f\x6e"](imaginaryTank, bullets, step, directions[directions["\x6c\x65\x6e\x67\x74\x68"]-1]), imaginaryTank];    }    analyzeCurrentSituation(imaginaryTank, bullets, step, direction) {        if (bullets["\x6c\x65\x6e\x67\x74\x68"] <= 0) {            return this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"];        }        let totalScore = 0;        let allCollideTime = "";        let allScore = "";                let bulletDirection = bullets[0]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"];        let allBulletsSameDirection = true;        let isBestScore = true;        let crash = false;        for(let i=0; i<bullets["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let bullet = bullets[i];            let array = this["\x67\x65\x74\x42\x75\x6c\x6c\x65\x74\x53\x63\x6f\x72\x65\x49\x6e\x66\x6f"](imaginaryTank, bullet, step);            totalScore += array[1];            allCollideTime += array[2] + " \x7c ";            allScore += array[1] + " ";            if (array[0]) {                                crash = true;                break;            }            if (bulletDirection !== bullet["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"]) {                allBulletsSameDirection = false;            }            if (array[1] < this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"]) {                isBestScore = false;            }        }        this["\x6c\x6f\x67"]("\x61\x6c\x6c\x43\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65\x41\x6e\x64\x44\x69\x73\x74\x61\x6e\x63\x65 \x3a ", allCollideTime);        this["\x6c\x6f\x67"]("\x61\x6c\x6c\x53\x63\x6f\x72\x65\x3a", allScore);        if (crash) {            return this["\x57\x4f\x52\x53\x54\x5f\x53\x43\x4f\x52\x45"];        }                if (allBulletsSameDirection && !isBestScore) {            if (bulletDirection === direction) {                                                                this["\x65\x72\x72\x6f\x72"]("\x69\x67\x6e\x6f\x72\x65 \x64\x69\x72\x65\x63\x74\x69\x6f\x6e \x73\x61\x6d\x65 \x77\x69\x74\x68 \x62\x75\x6c\x6c\x65\x74");                return this["\x57\x4f\x52\x53\x54\x5f\x53\x43\x4f\x52\x45"];            }        }                return totalScore / bullets["\x6c\x65\x6e\x67\x74\x68"];    }    imaginaryTankPositionScore(imaginaryTank) {        let targetTank = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2];        if (targetTank === undefined) {                        this["\x65\x72\x72\x6f\x72"]("\x73\x68\x69\x74 \x63\x68\x65\x63\x6b");            return 0;        }        let curDistance = this["\x67\x65\x74\x54\x61\x6e\x6b\x44\x69\x73\x74\x61\x6e\x63\x65"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank)[0];        let imgDistance = this["\x67\x65\x74\x54\x61\x6e\x6b\x44\x69\x73\x74\x61\x6e\x63\x65"](imaginaryTank, targetTank)[0];        if (this["\x69\x6e\x44\x61\x6e\x67\x65\x72\x41\x72\x65\x61"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank)) {                        if (imgDistance < curDistance) {                this["\x65\x72\x72\x6f\x72"]("\x6d\x6f\x72\x65 \x64\x61\x6e\x67\x65\x72\x2c \x2d\x31");                return -1;            }        } else {                        if (imgDistance > curDistance) {                this["\x65\x72\x72\x6f\x72"]("\x6d\x6f\x72\x65 \x73\x61\x66\x65\x72\x2c \x2d\x31");                return -1;            }        }        return 0;    }    getDistanceOf(dx1, dy1) {        return window["\x4d\x61\x74\x68"]["\x73\x71\x72\x74"](window["\x4d\x61\x74\x68"]["\x70\x6f\x77"](dx1, 2) + window["\x4d\x61\x74\x68"]["\x70\x6f\x77"](dy1, 2));    }    getBulletScoreInfo(tank, bullet, step) {        let hasZero = false;        let tempScore = this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"];                bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"] = this["\x67\x65\x74\x43\x6f\x6c\x6c\x69\x64\x65\x53\x74\x65\x70\x73\x4f\x6e\x42\x75\x6c\x6c\x65\x74\x73\x4d\x6f\x76\x65"](tank, bullet);        let collideInfo = bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"] + " ";        if (bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"] === 0) {                        hasZero = true;            tempScore = this["\x57\x4f\x52\x53\x54\x5f\x53\x43\x4f\x52\x45"];        } else {            if (bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"] > 0 && bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"] < this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"]) {                                tempScore = this["\x42\x45\x53\x54\x5f\x53\x43\x4f\x52\x45"] + this["\x73\x63\x6f\x72\x65\x4f\x66\x43\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"](bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"], step);                                bullet["\x63\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65"] = this["\x67\x65\x74\x4d\x69\x6e\x43\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66"](tank, bullet);                let scoreOfdistance = this["\x73\x63\x6f\x72\x65\x4f\x66\x44\x69\x73\x74\x61\x6e\x63\x65"](bullet["\x63\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65"]);                tempScore += scoreOfdistance;                collideInfo += bullet["\x63\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65"] + " " + scoreOfdistance;            } else {                                let collideTimeOnTankMove = this["\x67\x65\x74\x43\x6f\x6c\x6c\x69\x64\x65\x53\x74\x65\x70\x73\x4f\x6e\x54\x61\x6e\x6b\x4d\x6f\x76\x65"](tank, bullet);                if (collideTimeOnTankMove >= 0 && collideTimeOnTankMove < this["\x54\x41\x4e\x4b\x5f\x4d\x4f\x56\x45\x5f\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"]) {                                        bullet["\x63\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65"] = this["\x67\x65\x74\x4d\x69\x6e\x43\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66"](tank, bullet);                    let scoreOfdistance = this["\x73\x63\x6f\x72\x65\x4f\x66\x44\x69\x73\x74\x61\x6e\x63\x65"](bullet["\x63\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65"]);                    tempScore += scoreOfdistance;                    collideInfo += bullet["\x63\x65\x6e\x74\x65\x72\x44\x69\x73\x74\x61\x6e\x63\x65"] + " " + scoreOfdistance;                    this["\x6c\x6f\x67"]("\x46\x69\x6e\x64 \x62\x75\x6c\x6c\x65\x74 \x6f\x6e \x74\x61\x6e\x6b\x27\x73 \x70\x61\x74\x68\x2c \x63\x61\x6c\x63\x75\x6c\x61\x74\x65 \x69\x74\x73 \x64\x69\x73\x74\x61\x6e\x63\x65\x32");                }            }        }        return [hasZero, tempScore, collideInfo, bullet["\x63\x6f\x6c\x6c\x69\x64\x65\x54\x69\x6d\x65"]];    }    scoreOfCollideTime(collideTime, step) {        let tempScore;        if (collideTime >= 15) {            tempScore = -(this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"] - collideTime + step - 1) * 2;        } else if (collideTime >= 10) {            tempScore = -(this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"] - collideTime + step - 1) * 4;        } else if (collideTime >=5) {            tempScore = -(this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"] - collideTime + step - 1) * 8;        } else {            tempScore = -(this["\x44\x41\x4e\x47\x45\x52\x5f\x53\x54\x45\x50"] - collideTime + step - 1) * 9;        }        return tempScore;            }    scoreOfDistance(distance) {        let score = -((this["\x42\x45\x53\x54\x5f\x44\x49\x53\x54\x41\x4e\x43\x45\x5f\x4f\x46\x5f\x43\x45\x4e\x54\x45\x52"]-distance));        return score;    }    copyOfTank(myTank) {        let imaginaryTank = {};        imaginaryTank["\x58"] = myTank["\x58"];        imaginaryTank["\x59"] = myTank["\x59"];        imaginaryTank["\x73\x70\x65\x65\x64"] = myTank["\x73\x70\x65\x65\x64"];        return imaginaryTank;    }        getMinCenterDistanceOf(tank, bullet) {        if (bullet["\x73\x70\x65\x65\x64"] === 0) {            return this["\x42\x45\x53\x54\x5f\x44\x49\x53\x54\x41\x4e\x43\x45\x5f\x4f\x46\x5f\x43\x45\x4e\x54\x45\x52"];        }        let tankCenterPoint = {};        let bulletCenterPoint = {};        tankCenterPoint["\x58"] = tank["\x58"] + tankWidth/2;        tankCenterPoint["\x59"] = tank["\x59"] + tankWidth/2;        bulletCenterPoint["\x58"] = bullet["\x58"];        bulletCenterPoint["\x59"] = bullet["\x59"];        return window["\x4d\x61\x74\x68"]["\x6d\x69\x6e"](window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tankCenterPoint["\x58"] - bulletCenterPoint["\x58"]), window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tankCenterPoint["\x59"] - bulletCenterPoint["\x59"]));    }    willCollideAtNSteps(playControl, step, myTank, bullet, isTankMove) {        if (isTankMove) {            return function (C2, Tw3, LnaT4) {                return playControl["\x77\x69\x6c\x6c\x43\x6f\x6c\x6c\x69\x64\x65\x41\x74\x4e\x53\x74\x65\x70\x73\x4f\x6e\x54\x61\x6e\x6b\x4d\x6f\x76\x65"](C2, Tw3, LnaT4);            }        } else {            return function (K5, jj6, bNFpuP7) {                return playControl["\x77\x69\x6c\x6c\x43\x6f\x6c\x6c\x69\x64\x65\x41\x74\x4e\x53\x74\x65\x70\x73\x4f\x6e\x42\x75\x6c\x6c\x65\x74\x73\x4d\x6f\x76\x65"](K5, jj6, bNFpuP7);            }        }    }    getCollideStepsOnMove(myTank, bullet, isTankMove) {                for(let j=0; j<=this["\x43\x48\x45\x43\x4b\x5f\x53\x54\x45\x50"]; j+=5) {            let willCollideAtNSteps = this["\x77\x69\x6c\x6c\x43\x6f\x6c\x6c\x69\x64\x65\x41\x74\x4e\x53\x74\x65\x70\x73"](this, j, myTank, bullet, isTankMove);            if (willCollideAtNSteps(j, myTank, bullet)) {                if (j === 0) {                    return 0;                }                let min = j-4;                let max = j;                while (true) {                    let mid = this["\x62\x69\x73\x65\x63\x74"](min, max);                    let willCollideAtNSteps = this["\x77\x69\x6c\x6c\x43\x6f\x6c\x6c\x69\x64\x65\x41\x74\x4e\x53\x74\x65\x70\x73"](this, mid, myTank, bullet, isTankMove);                    if (willCollideAtNSteps(mid, myTank, bullet)) {                        if (mid === max || mid === min) {                                                        return min;                        }                                                max = mid - 1;                    } else {                        if (mid === max || mid === min) {                                                        return max;                        }                                                min = mid + 1;                    }                }            }        }                return this["\x4e\x4f\x5f\x43\x4f\x4c\x4c\x49\x44\x45"];    }    bisect(min, max) {        return window["\x4d\x61\x74\x68"]["\x66\x6c\x6f\x6f\x72"]((min + max)/2);    }    getCollideStepsOnTankMove(myTank, bullet) {        return this["\x67\x65\x74\x43\x6f\x6c\x6c\x69\x64\x65\x53\x74\x65\x70\x73\x4f\x6e\x4d\x6f\x76\x65"](myTank, bullet, true);    }    getCollideStepsOnBulletsMove(myTank, bullet) {        return this["\x67\x65\x74\x43\x6f\x6c\x6c\x69\x64\x65\x53\x74\x65\x70\x73\x4f\x6e\x4d\x6f\x76\x65"](myTank, bullet, false);    }        imagineAllMoveNStepForOneDirection(bullets, tank, steps) {        let bulletsPoints = [];        for (let i = 0; i < bullets["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let bullet = bullets[i];                        let point;            if (bullet["\x6e\x61\x6d\x65"] >= 1000) {                                point = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](steps - 1, bullet, false);            } else {                point = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](steps, bullet, false);            }            bulletsPoints["\x70\x75\x73\x68"](point);        }        let tankPoint = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](steps, tank, true);        return [tankPoint, bulletsPoints];    }        imagineAllMoveOneStep(bullets, tank, firstStep) {        let bulletsPoints = [];        for (let i = 0; i < bullets["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let bullet = bullets[i];            let point;                                    if (firstStep && bullet["\x6e\x61\x6d\x65"] >= 1000) {                point = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](0, bullet, false);            } else {                point = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](1, bullet, false);            }            bulletsPoints["\x70\x75\x73\x68"](point);        }        let tankPoint = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](1, tank, true);        return [tankPoint, bulletsPoints];    }        imagineMove(step, movable, isTank) {        let point = {};        let moveOffset = movable["\x73\x70\x65\x65\x64"] * step;        let bX = movable["\x58"];        let bY = movable["\x59"];        if (movable["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"]) {            bX -= moveOffset;        } else if (movable["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]) {            bX += moveOffset;        } else if (movable["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]) {            bY -= moveOffset;        } else if (movable["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]) {            bY += moveOffset;        } else {                    }        if (isTank) {                        if (bX < 0) {                bX = 0;            }            if (bX > canvas["\x77\x69\x64\x74\x68"]-tankWidth) {                bX = canvas["\x77\x69\x64\x74\x68"]-tankWidth;            }            if (bY < 0) {                bY = 0;            }            if (bY > canvas["\x68\x65\x69\x67\x68\x74"]-tankWidth) {                bY = canvas["\x68\x65\x69\x67\x68\x74"]-tankWidth;            }                        if (this["\x63\x6f\x6c\x6c\x69\x73\x69\x6f\x6e\x4d\x65\x74\x61\x6c"](bX, bY, tankWidth)) {                bX = movable["\x58"];                bY = movable["\x59"];            }        }        point["\x58"] = bX;        point["\x59"] = bY;        point["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = movable["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"];        point["\x73\x70\x65\x65\x64"] = movable["\x73\x70\x65\x65\x64"];        if (movable["\x68\x61\x73\x4f\x77\x6e\x50\x72\x6f\x70\x65\x72\x74\x79"]("\x77\x69\x64\x74\x68")) {            point["\x77\x69\x64\x74\x68"] = movable["\x77\x69\x64\x74\x68"];        }        return point;    }        willCollideAtNStepsOnTankMove(n, myTank, bullet) {        let isCollide = this["\x63\x68\x65\x63\x6b\x49\x66\x43\x6f\x6c\x6c\x69\x64\x65\x4f\x6e\x54\x61\x6e\x6b\x4d\x6f\x76\x65"](n, myTank, bullet);                return isCollide;    }        willCollideAtNStepsOnBulletsMove(n, myTank, bullet) {        let isCollide = this["\x63\x68\x65\x63\x6b\x49\x66\x43\x6f\x6c\x6c\x69\x64\x65\x4f\x6e\x42\x75\x6c\x6c\x65\x74\x73\x4d\x6f\x76\x65"](n, myTank, bullet);                return isCollide;    }    checkIfRectCollide(A, B, C, D, E, F, G, H) {        C += A;        D += B;        G += E;        H += F;        if (C <= E || G <= A || D <= F || H <= B) {                    return false;        }        return true;    }    checkIfCollideOnTankMove(n, myTank, bullet) {        let tankPoint = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](n, myTank, true);        let tX = tankPoint["\x58"];        let tY = tankPoint["\x59"];        let collide = this["\x63\x68\x65\x63\x6b\x49\x66\x52\x65\x63\x74\x43\x6f\x6c\x6c\x69\x64\x65"](tX, tY, tankWidth, tankWidth, bullet["\x58"]-bullet["\x77\x69\x64\x74\x68"]/2, bullet["\x59"]-bullet["\x77\x69\x64\x74\x68"]/2, bullet["\x77\x69\x64\x74\x68"], bullet["\x77\x69\x64\x74\x68"]);                return collide;    }        checkIfCollideOnBulletsMove(n, myTank, bullet) {        let point = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](n, bullet, false);        point["\x58"] -= bullet["\x77\x69\x64\x74\x68"]/2;        point["\x59"] -= bullet["\x77\x69\x64\x74\x68"]/2;        let tX = myTank["\x58"];        let tY = myTank["\x59"];        let collide = this["\x63\x68\x65\x63\x6b\x49\x66\x52\x65\x63\x74\x43\x6f\x6c\x6c\x69\x64\x65"](tX, tY, tankWidth, tankWidth, point["\x58"], point["\x59"], bullet["\x77\x69\x64\x74\x68"], bullet["\x77\x69\x64\x74\x68"]);                return collide;    }    sortPaths(path1, path2) {        let movements2 = path2["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"];        let movements1 = path1["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"];        if (movements2["\x6c\x65\x6e\x67\x74\x68"] === movements1["\x6c\x65\x6e\x67\x74\x68"]) {            for(let i=movements2["\x6c\x65\x6e\x67\x74\x68"]-1; i>=0; i--) {                if (movements2[i]["\x73\x63\x6f\x72\x65"] !== movements1[i]["\x73\x63\x6f\x72\x65"]) {                    return movements2[i]["\x73\x63\x6f\x72\x65"] - movements1[i]["\x73\x63\x6f\x72\x65"];                } else {                                        if (i===0) {                        return 0;                    }                }            }        } else {            return movements2["\x6c\x65\x6e\x67\x74\x68"] - movements1["\x6c\x65\x6e\x67\x74\x68"];        }    }    Path() {        let path = {};        path["\x6d\x6f\x76\x65\x6d\x65\x6e\x74\x73"] = [];        return path;    }    Movement(direction, score) {        let movement = {};        movement["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = direction;        movement["\x73\x63\x6f\x72\x65"] = score;        return movement;    }    getMovablePos(movable) {        return "\x28" + movable["\x58"] + "\x2c" + movable["\x59"] + "\x29";    }    printMovablePos(prefix, movable) {        let position = prefix;        position += this["\x67\x65\x74\x4d\x6f\x76\x61\x62\x6c\x65\x50\x6f\x73"](movable);        this["\x6c\x6f\x67"]("\x74\x61\x6e\x6b\x50\x6f\x73\x69\x74\x69\x6f\x6e", position);    }    printBulletsPos(prefix, bullets) {        let allPoistion = prefix;        bullets["\x66\x6f\x72\x45\x61\x63\x68"](bullet => {            allPoistion += this["\x67\x65\x74\x4d\x6f\x76\x61\x62\x6c\x65\x50\x6f\x73"](bullet) + " ";        });        this["\x6c\x6f\x67"]("\x61\x6c\x6c\x42\x75\x6c\x6c\x65\x74\x50\x6f\x73\x69\x74\x69\x6f\x6e\x3a" + allPoistion);    }    countEnemy() {        let width;        if (this["\x69\x73\x43\x6f\x75\x6e\x74\x65\x72\x53\x74\x72\x69\x6b\x65"]()) {            width = canvas["\x77\x69\x64\x74\x68"]/8;        } else {            width = canvas["\x77\x69\x64\x74\x68"]/4;        }        let count = 0;        for(let i=0;i<this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let enemy = this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"][i];            if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - enemy["\x59"]) < canvas["\x68\x65\x69\x67\x68\x74"]/2 && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - enemy["\x58"]) < width) {                count ++;            }        }        return count;    }    traceAndFireV2() {        let finalDirection;        this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"] = this["\x66\x69\x6e\x64\x4e\x65\x61\x72\x65\x73\x74\x54\x61\x6e\x6b"]();        let dx = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][0];        let dy = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][1];        let targetTank = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2];        let shouldFire = false;        if (this["\x44\x45\x42\x55\x47"]) {                    }        if (targetTank === this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {            this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = 3 * this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"];            this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = 4 * this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"];            this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x49\x4e\x54\x45\x52\x56\x41\x4c"] = 200 - (5-this["\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]) * 40;            if (this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x49\x4e\x54\x45\x52\x56\x41\x4c"] >= 119) {                this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x49\x4e\x54\x45\x52\x56\x41\x4c"] = 119;            }            this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] = (this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] + this["\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"])/2;        } else {                        this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = 2.5 * this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"];            this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = 3.5 * this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"];            let enemyAroundCount = this["\x63\x6f\x75\x6e\x74\x45\x6e\x65\x6d\x79"]();            let step = this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/10 * (window["\x4d\x61\x74\x68"]["\x66\x6c\x6f\x6f\x72"](enemyAroundCount/2)-(this["\x61\x6c\x6c\x41\x49\x54\x61\x6e\x6b\x43\x6f\x75\x6e\x74"]/8));            this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] += step;            this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] += step;            this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x49\x4e\x54\x45\x52\x56\x41\x4c"] = 200 - enemyAroundCount * 20;                        this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] = (this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] + this["\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"])/2 ;                    }        this["\x55\x4e\x53\x41\x46\x45\x5f\x41\x50\x50\x52\x4f\x41\x43\x48\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2;        this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] + 2 * this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"];                        if (this["\x6d\x79\x43\x6f\x6c\x6c\x69\x64\x65\x4e\x75\x6d"] > 10) {                        let bestMetal = this["\x66\x69\x6e\x64\x42\x65\x73\x74\x4d\x65\x74\x61\x6c\x32\x45\x73\x63\x61\x70\x65"]();            let distance = this["\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x44\x69\x73\x74\x61\x6e\x63\x65\x57\x69\x74\x68\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank, bestMetal);                                    if (bestMetal !== undefined && distance > 3 * this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]) {                                if (this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"] !== undefined) {                    finalDirection = this["\x65\x73\x63\x61\x70\x65\x34\x45\x6e\x65\x6d\x79"](bestMetal);                                        return [finalDirection, targetTank, shouldFire];                }            } else {                                if (targetTank === this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {                    let array = this["\x61\x70\x70\x72\x6f\x61\x63\x68\x41\x6e\x64\x46\x69\x72\x65"](dx, dy);                    finalDirection = array[0];                    shouldFire = array[1];                    return [finalDirection, targetTank, shouldFire];                }            }        } else {                        if (targetTank === this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {                let array = this["\x61\x70\x70\x72\x6f\x61\x63\x68\x41\x6e\x64\x46\x69\x72\x65"](dx, dy);                finalDirection = array[0];                shouldFire = array[1];                return [finalDirection, targetTank, shouldFire];            }        }        if (this["\x69\x6e\x44\x61\x6e\x67\x65\x72\x41\x72\x65\x61"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank)) {                        finalDirection = this["\x65\x73\x63\x61\x70\x65\x34\x41\x49"](dx, dy);        } else if (this["\x69\x6e\x46\x69\x72\x65\x41\x72\x65\x61"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank)) {                        finalDirection = this["\x73\x74\x6f\x70\x41\x6e\x64\x46\x69\x72\x65"](dx, dy);            this["\x6c\x6f\x67"]("\x73\x74\x6f\x70 \x61\x6e\x64 \x66\x69\x72\x65");        } else  if (this["\x69\x6e\x55\x6e\x53\x61\x66\x65\x41\x70\x70\x72\x6f\x61\x63\x68\x41\x72\x65\x61"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank) && targetTank !== this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {                        finalDirection = this["\x65\x73\x63\x61\x70\x65\x46\x6f\x72\x41\x70\x70\x72\x6f\x61\x63\x68"](dx, dy);        } else if (this["\x69\x6e\x46\x61\x72\x46\x69\x72\x65\x41\x72\x65\x61"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank)) {                        finalDirection = this["\x67\x6f\x41\x6e\x64\x46\x69\x72\x65"](dx, dy);            this["\x6c\x6f\x67"]("\x67\x6f \x61\x6e\x64 \x66\x69\x72\x65");        } else {                        finalDirection = this["\x66\x69\x6e\x64\x42\x65\x73\x74\x46\x69\x72\x65\x41\x72\x65\x61"](targetTank);        }        return [finalDirection, targetTank, shouldFire];    }    approachAndFire(dx, dy) {        if (this["\x69\x6e\x53\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x41\x72\x65\x61"](dx, dy)) {                        this["\x69\x6e\x53\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x4d\x6f\x64\x65"] = true;        }         if (this["\x69\x6e\x53\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x4d\x6f\x64\x65"]) {            return this["\x73\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b"](dx, dy);        } else if (this["\x69\x6e\x41\x74\x74\x61\x63\x6b\x41\x72\x65\x61"](dx, dy)) {            return [this["\x61\x74\x74\x61\x63\x6b"](dx, dy), false];        } else {            this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = 0;            this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] = this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"];            return [this["\x66\x69\x6e\x64\x42\x65\x73\x74\x46\x69\x72\x65\x41\x72\x65\x61"](this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2]), false];        }    }    findBestFireArea(targetTank) {        let targetTankCenter = {X:targetTank["\x58"], Y:targetTank["\x59"]};        let point1 = {X:targetTankCenter["\x58"] - this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"], Y:targetTankCenter["\x59"]};        let point2 = {X:targetTankCenter["\x58"], Y:targetTankCenter["\x59"] - this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]};        let point3 = {X:targetTankCenter["\x58"] + this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"], Y:targetTankCenter["\x59"]};        let point4 = {X:targetTankCenter["\x58"], Y:targetTankCenter["\x59"] + this["\x42\x45\x53\x54\x5f\x46\x49\x52\x45\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]};        let points = [point1, point2, point3, point4];        let highestScore = -this["\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"];        let nearestPoint;                for(let i=0;i<points["\x6c\x65\x6e\x67\x74\x68"];i++) {                        let point = points[i];            if (point["\x58"] < 0 || point["\x59"] < 0 || point["\x58"] > canvas["\x77\x69\x64\x74\x68"]-tankWidth || point["\x59"] > canvas["\x68\x65\x69\x67\x68\x74"]-tankWidth) {                                continue;            }            if (this["\x63\x6f\x6c\x6c\x69\x73\x69\x6f\x6e\x4d\x65\x74\x61\x6c"](point["\x58"], point["\x59"], tankWidth)) {                                continue;            }            let imagineTank = {X:point["\x58"] ,Y:point["\x59"]};            let block = this["\x69\x73\x42\x6c\x6f\x63\x6b\x42\x79\x4d\x65\x74\x61\x6c"](imagineTank, targetTank);                        if (block) {                continue;            }                        let score = this["\x67\x65\x74\x50\x6f\x73\x69\x74\x69\x6f\x6e\x53\x63\x6f\x72\x65\x4f\x66\x46\x69\x72\x65\x41\x72\x65\x61"](point);                        if (score > highestScore) {                highestScore = score;                nearestPoint = point;            }        }                return this["\x6d\x6f\x76\x65\x32\x50\x6f\x69\x6e\x74"](nearestPoint);    }    getPositionScoreOfFireArea(point) {                        let nearestMetal = this["\x66\x69\x6e\x64\x4e\x65\x61\x72\x65\x73\x74\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], point);        let distance = this["\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x44\x69\x73\x74\x61\x6e\x63\x65\x57\x69\x74\x68\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], point, nearestMetal);        let minDistanceOfBoundLR = window["\x4d\x61\x74\x68"]["\x6d\x69\x6e"](point["\x58"], canvas["\x77\x69\x64\x74\x68"] - point["\x58"]);        let minDistanceOfBoundTB = window["\x4d\x61\x74\x68"]["\x6d\x69\x6e"](point["\x59"], canvas["\x68\x65\x69\x67\x68\x74"] - point["\x59"]);        let bulletsCount = this["\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x42\x75\x6c\x6c\x65\x74\x43\x6f\x75\x6e\x74\x41\x72\x6f\x75\x6e\x64\x50\x6f\x69\x6e\x74"](point);                        if (this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2] === this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {            return (-distance - this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66\x50\x6f\x69\x6e\x74\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], point))/2;        }        let factors = this["\x67\x65\x74\x46\x61\x63\x74\x6f\x72\x4f\x66\x42\x6f\x75\x6e\x64"]();        let score = -distance - bulletsCount * 10 + minDistanceOfBoundLR * factors[0] + minDistanceOfBoundTB * factors[1];        return score;    }    getFactorOfBound() {        for(let i=0;i<this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x6c\x65\x6e\x67\x74\x68"];i++) {            let tank = this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"][i];                        if (tank["\x58"] < canvas["\x77\x69\x64\x74\x68"]/2) {                return [0.25, 4];            }        }        return [4, 0.25];    }    calculateBulletCountAroundPoint(point) {        let bulletsCount = 0;        for(let i=0;i<this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let bullet = this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x42\x75\x6c\x6c\x65\x74\x73"][i];            if (bullet["\x73\x70\x65\x65\x64"] === 0) {                                continue;            }            let distance = this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66\x50\x6f\x69\x6e\x74\x73"](point, bullet);            if (distance < 2 * this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]) {                bulletsCount ++;            }        }        return bulletsCount;    }    findNearestMetal(point1, point2) {        let nearestMetal;        let nearestMetalDistance = this["\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"];        for(let j=0;j<ametal["\x6c\x65\x6e\x67\x74\x68"];j++) {            let metal = ametal[j];            let metalCenter = {X:metal[0]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2, Y:metal[1]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2};            let tempDistance = (this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66\x50\x6f\x69\x6e\x74\x73"](metalCenter, point1) + this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66\x50\x6f\x69\x6e\x74\x73"](metalCenter, point2))/2;            if (tempDistance < nearestMetalDistance) {                nearestMetalDistance = tempDistance;                nearestMetal = metal;            }        }        return nearestMetal;    }    move2Point(targetPoint) {        let nearestMetal = this["\x66\x69\x6e\x64\x4e\x65\x61\x72\x65\x73\x74\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetPoint);        let distance = this["\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x44\x69\x73\x74\x61\x6e\x63\x65\x57\x69\x74\x68\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetPoint, nearestMetal);        let recommendDirection;        let dx = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - targetPoint["\x58"];        let dy = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - targetPoint["\x59"];            if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) > canvas["\x77\x69\x64\x74\x68"]/4 && this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2] !== this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {                                if (dx > 0) {                    recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                } else {                    recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                }            } else {                                let targetTank = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2];                let dxOfTankAndPoint = targetPoint["\x58"] - targetTank["\x58"];                let dyOfTankAndPoint = targetPoint["\x59"] - targetTank["\x59"];                if (dxOfTankAndPoint > 0) {                                        if (dx <= 0) {                        recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                    } else {                        if (dy < 0) {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                        } else {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                        }                    }                } else if (dxOfTankAndPoint < 0) {                                        if (dx >= 0) {                        recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                    } else {                        if (dy < 0) {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                        } else {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                        }                    }                } else if (dyOfTankAndPoint > 0) {                                        if (dy <= 0) {                        recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                    } else {                        if (dx > 0) {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                        } else {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                        }                    }                } else {                                        if (dy >= 0) {                        recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                    } else {                        if (dx > 0) {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                        } else {                            recommendDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                        }                    }                }            }                    let optionDirections = [];        for(let i=0; i<this["\x73\x76\x4e\x6f\x53\x74\x6f\x70\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let direction = this["\x73\x76\x4e\x6f\x53\x74\x6f\x70\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"][i];            let copyOfMyTank = this["\x63\x6f\x70\x79\x4f\x66\x54\x61\x6e\x6b"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]);            copyOfMyTank["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = direction;            let imaginaryTank = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](1, copyOfMyTank, true);            let tempDistance = this["\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x44\x69\x73\x74\x61\x6e\x63\x65\x57\x69\x74\x68\x4d\x65\x74\x61\x6c"](imaginaryTank, targetPoint, nearestMetal);                        if (imaginaryTank["\x58"] === copyOfMyTank["\x58"] && imaginaryTank["\x59"] === copyOfMyTank["\x59"]) {                                continue;            }                        if (this["\x69\x6e\x44\x61\x6e\x67\x65\x72\x41\x72\x65\x61"](imaginaryTank, this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2])) {                continue;            }            if (tempDistance < distance) {                optionDirections["\x70\x75\x73\x68"](direction);            }        }        if (optionDirections["\x6c\x65\x6e\x67\x74\x68"] > 0) {            for(let i=0; i<optionDirections["\x6c\x65\x6e\x67\x74\x68"];i++) {                let direction = optionDirections[i];                if (direction === recommendDirection) {                    return direction;                }            }            return optionDirections[0];        } else {            this["\x6c\x6f\x67"]("\u67e5\u95ee\u9898");            return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];        }    }    inAttackArea(dx, dy) {        if ((window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) < this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"]) || (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy) < this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"])) {            if (this["\x69\x73\x42\x6c\x6f\x63\x6b\x42\x79\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2])) {                return false;            }            return true;        }        return false;    }    inSuperAttackArea(dx, dy) {        if ((window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) < this["\x53\x55\x50\x45\x52\x5f\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy) >= this["\x53\x55\x50\x45\x52\x5f\x41\x54\x54\x41\x43\x4b\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy) <= this["\x53\x55\x50\x45\x52\x5f\x41\x54\x54\x41\x43\x48\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) || (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy) < this["\x53\x55\x50\x45\x52\x5f\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) >= this["\x53\x55\x50\x45\x52\x5f\x41\x54\x54\x41\x43\x4b\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) <= this["\x53\x55\x50\x45\x52\x5f\x41\x54\x54\x41\x43\x48\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"])) {            if (this["\x69\x73\x42\x6c\x6f\x63\x6b\x42\x79\x4d\x65\x74\x61\x6c"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2])) {                return false;            }            let targetTank = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2];            if (targetTank !== this["\x65\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]) {                return false;            }            let minDistanceOfSuperAttack = 198;            let distanceOfSuperAttack = minDistanceOfSuperAttack + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2;            let centerOfMyTank = {X:this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2, Y:this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2};            let centerOfTargetTank = {X:targetTank["\x58"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2, Y:targetTank["\x59"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2};            if (centerOfTargetTank["\x59"] < centerOfMyTank["\x59"] && centerOfMyTank["\x59"] < distanceOfSuperAttack) {                return true;            }            if (centerOfTargetTank["\x58"] < centerOfMyTank["\x58"] && centerOfMyTank["\x58"] < distanceOfSuperAttack) {                return true;            }            if (centerOfTargetTank["\x59"] > centerOfMyTank["\x59"] && centerOfMyTank["\x59"] > canvas["\x68\x65\x69\x67\x68\x74"] - distanceOfSuperAttack) {                return true;            }            if (centerOfTargetTank["\x58"] > centerOfMyTank["\x58"] && centerOfMyTank["\x58"] > canvas["\x77\x69\x64\x74\x68"] - distanceOfSuperAttack) {                return true;            }                        for(let i=0;i<ametal["\x6c\x65\x6e\x67\x74\x68"]; i++) {                let metal = ametal[i];                let centerOfMetal = {X:metal[0]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2,Y:metal[1]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2};                let deltaX = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](centerOfTargetTank["\x58"] - centerOfMetal["\x58"]);                let deltaY = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](centerOfTargetTank["\x59"] - centerOfMetal["\x59"]);                let deltaXOfMine = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](centerOfMyTank["\x58"] - centerOfMetal["\x58"]);                let deltaYOfMine = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](centerOfMyTank["\x59"] - centerOfMetal["\x59"]);                if (deltaY < (this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"])/2 && deltaX < (this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"])/2+minDistanceOfSuperAttack && deltaXOfMine > deltaX && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) < this["\x53\x55\x50\x45\x52\x5f\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"]) {                    return true;                }                if (deltaX < (this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"])/2 && deltaY < (this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"])/2+minDistanceOfSuperAttack && deltaYOfMine > deltaY && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy) < this["\x53\x55\x50\x45\x52\x5f\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"]) {                    return true;                }            }            return false;        }        return false;    }    inDangerArea(myTank, targetTank) {        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x58"]-targetTank["\x58"]);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x59"]-targetTank["\x59"]);        if (absDx<=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDy<=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {                                                                        return true;        }        return false;    }    inFireArea(myTank, targetTank) {        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x58"]-targetTank["\x58"]);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x59"]-targetTank["\x59"]);        if ((absDx<this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && absDy>=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDy <= this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"])            || (absDy<this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && absDx>=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDx <= this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"])) {            if (this["\x69\x73\x42\x6c\x6f\x63\x6b\x42\x79\x4d\x65\x74\x61\x6c"](myTank, targetTank)) {                                return false;            }            return true;        }        return false;    }    inUnSafeApproachArea(myTank, targetTank) {        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x58"]-targetTank["\x58"]);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x59"]-targetTank["\x59"]);        if (this["\x69\x73\x42\x6c\x6f\x63\x6b\x42\x79\x4d\x65\x74\x61\x6c"](myTank, targetTank)) {                        return false;        }        if (absDx>this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDx<=this["\x55\x4e\x53\x41\x46\x45\x5f\x41\x50\x50\x52\x4f\x41\x43\x48\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDy>=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDy<=this["\x55\x4e\x53\x41\x46\x45\x5f\x41\x50\x50\x52\x4f\x41\x43\x48\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {            return true;        }        if (absDx>=this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && absDx<=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDy>=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDy<=this["\x55\x4e\x53\x41\x46\x45\x5f\x41\x50\x50\x52\x4f\x41\x43\x48\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {            return true;        }        if (absDy>=this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && absDy<=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDx>=this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"] && absDx<=this["\x55\x4e\x53\x41\x46\x45\x5f\x41\x50\x50\x52\x4f\x41\x43\x48\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {            return true;        }        return false;    }    inFarFireArea(myTank, targetTank) {        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x58"]-targetTank["\x58"]);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](myTank["\x59"]-targetTank["\x59"]);        if ((absDx<this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && absDy>=this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) || (absDy<this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x4f\x46\x46\x53\x45\x54"] && absDx>=this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"])) {            if (this["\x69\x73\x42\x6c\x6f\x63\x6b\x42\x79\x4d\x65\x74\x61\x6c"](myTank, targetTank)) {                                return false;            }            return true;        }        return false;    }    escape4AI(dx, dy) {        let direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy);        if (absDy < absDx) {                        if (absDy <= this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {                                if (dy > 0) {                    if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] >= canvas["\x68\x65\x69\x67\x68\x74"]-this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {                        if (dx > 0) {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                        } else {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                        }                    } else {                                                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                    }                } else {                    if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] <= this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {                        if (dx > 0) {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                        } else {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                        }                    } else {                                                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                    }                }            } else {                            }        } else {                        if (absDx <= this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {                                                if (dx > 0) {                                                            if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] >= canvas["\x77\x69\x64\x74\x68"]-this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {                        if (dy > 0) {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                        } else {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                        }                    } else {                        direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                    }                } else {                                        if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] <= this["\x44\x41\x4e\x47\x45\x52\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {                        if (dy > 0) {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                        } else {                            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                        }                    } else {                        direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                    }                }            } else {                            }        }        return this["\x63\x68\x65\x63\x6b\x49\x66\x4e\x65\x65\x64\x54\x75\x72\x6e\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"](direction);    }    approach(dx, dy) {        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy);        if (absDx > absDy) {                        if (dx > 0) {                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];            } else {                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];            }        } else {            if (dy > 0) {                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];            } else {                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];            }        }            }    escape4Enemy(bestMetal) {                                        let myTankCenter = {X:this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2, Y:this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2};        let metalCenter = {X:bestMetal[0] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2, Y:bestMetal[1] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2};        let centerDx = myTankCenter["\x58"] - metalCenter["\x58"];        let centerDy = myTankCenter["\x59"] - metalCenter["\x59"];        if (this["\x72\x6f\x6c\x6c\x69\x6e\x67\x4d\x65\x74\x61\x6c"](centerDx, centerDy)) {            return this["\x72\x6f\x6c\x6c\x4d\x65\x74\x61\x6c"](centerDx, centerDy, bestMetal);        } else {                        return this["\x61\x70\x70\x72\x6f\x61\x63\x68\x4d\x65\x74\x61\x6c"](bestMetal);        }    }    rollMetal(dx, dy, metal) {                let directions = this["\x67\x65\x74\x54\x77\x6f\x52\x6f\x6c\x6c\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"](dx, dy);        directions["\x70\x75\x73\x68"](this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"]);        let copyOfMyTank = this["\x63\x6f\x70\x79\x4f\x66\x54\x61\x6e\x6b"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]);        let targetTank = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2];        let maxDistance = 0;        let finalDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];        for(let i=0;i<directions["\x6c\x65\x6e\x67\x74\x68"];i++) {            let direction = directions[i];            copyOfMyTank["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = direction;            let imaginaryTank = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](2, copyOfMyTank, true);            let distance = this["\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x44\x69\x73\x74\x61\x6e\x63\x65\x57\x69\x74\x68\x4d\x65\x74\x61\x6c"](imaginaryTank, targetTank, metal);            if (distance > maxDistance) {                maxDistance = distance;                finalDirection = direction;            }        }        return finalDirection;    }    getTwoRollDirections(dx, dy) {        let directions = [];        let minDistance = (this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"])/2;        let maxDistance = minDistance + this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x73\x70\x65\x65\x64"];        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy);        if (absDx < minDistance && absDy >= minDistance && absDy < maxDistance) {                        directions = [this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"], this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]];        }        if (absDy < minDistance && absDx >= minDistance && absDx < maxDistance) {                        directions = [this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"], this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]];        }        if (absDx >= minDistance && absDx < maxDistance && absDy >= minDistance && absDy < maxDistance) {            if (dx < 0 && dy < 0) {                directions = [this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"], this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]];            }            if (dx < 0 && dy > 0) {                directions = [this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"], this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]];            }            if (dx > 0 && dy < 0) {                directions = [this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"], this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]];            }            if (dx > 0 && dy > 0) {                directions = [this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"], this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]];            }        }                return directions;    }    isInConnectPointArea(absDx, absDy) {        let minDistance = (this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"])/2;        return (absDx >= minDistance && absDy >= minDistance);    }    rollingMetal(dx, dy) {        let rollingDistance = this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2 + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2 + this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x73\x70\x65\x65\x64"];        if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) < rollingDistance && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy) < rollingDistance) {            return true;        }        return false;    }    approachMetal(metal) {        let direction;        let nearestVertexOfTank = this["\x67\x65\x74\x4e\x65\x61\x72\x65\x73\x74\x56\x65\x72\x74\x65\x78\x4f\x66\x54\x61\x6e\x6b"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], metal);        let nearestVertex = this["\x67\x65\x74\x4e\x65\x61\x72\x65\x73\x74\x56\x65\x72\x74\x65\x78\x4f\x66\x4d\x65\x74\x61\x6c"](metal);        let dx = nearestVertexOfTank["\x58"] - nearestVertex["\x58"];        let dy = nearestVertexOfTank["\x59"] - nearestVertex["\x59"];                if (window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx) > window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy)) {            if (dx > 0) {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];            } else {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];            }        } else {            if (dy > 0) {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];            } else {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];            }        }        return direction;    }    findBestMetal2Escape() {        let minDistance = this["\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"];        let bestMetal;        let targetTank = this["\x74\x61\x72\x67\x65\x74\x54\x61\x6e\x6b\x49\x6e\x66\x6f"][2];        for(let i=0; i<ametal["\x6c\x65\x6e\x67\x74\x68"];i++) {            let metal = ametal[i];                        let nearestVertexOfTank = this["\x67\x65\x74\x4e\x65\x61\x72\x65\x73\x74\x56\x65\x72\x74\x65\x78\x4f\x66\x54\x61\x6e\x6b"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], metal);            let nearestVertex = this["\x67\x65\x74\x4e\x65\x61\x72\x65\x73\x74\x56\x65\x72\x74\x65\x78\x4f\x66\x4d\x65\x74\x61\x6c"](metal);            let dx1 = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - targetTank["\x58"];            let dx2 = nearestVertexOfTank["\x58"] - nearestVertex["\x58"];            let dy1 = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - targetTank["\x59"];            let dy2 = nearestVertexOfTank["\x59"] - nearestVertex["\x59"];            if (this["\x69\x6e\x44\x61\x6e\x67\x65\x72\x41\x72\x65\x61"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], targetTank)) {                                if ((dx1 * dx2 > 0 && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx1) < window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx2)) || (dy1 * dy2 > 0 && window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy1) < window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy2))) {                                        continue;                }            }            let tempDistance = this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66\x50\x6f\x69\x6e\x74\x73"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], {X:metal[0], Y:metal[1]});            if (tempDistance < minDistance) {                minDistance = tempDistance;                bestMetal = metal;            }        }        return bestMetal;    }    getNearestVertexOfTank(tank, metal) {        let nearestVertex = {};        let vertex1 = {X:tank["\x58"], Y:tank["\x59"]};        let vertex2 = {X:tank["\x58"] + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"], Y:tank["\x59"]};        let vertex3 = {X:tank["\x58"] + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"], Y:tank["\x59"] + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]};        let vertex4 = {X:tank["\x58"], Y:tank["\x59"] + this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]};        let vertexs = [vertex1, vertex2, vertex3, vertex4];        let minDistance = this["\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"];        for(let i=0;i<vertexs["\x6c\x65\x6e\x67\x74\x68"];i++) {            let vertex = vertexs[i];            let distance = this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66\x50\x6f\x69\x6e\x74\x73"]({X:metal[0]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2, Y:metal[1]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2}, vertex);            if (distance < minDistance) {                minDistance = distance;                nearestVertex = vertex;            }        }        return nearestVertex;    }    getNearestVertexOfMetal(metal) {        let nearestVertex = {};        let vertex1 = {X:metal[0], Y:metal[1]};        let vertex2 = {X:metal[0] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"], Y:metal[1]};        let vertex3 = {X:metal[0] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"], Y:metal[1] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]};        let vertex4 = {X:metal[0], Y:metal[1] + this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]};        let vertexs = [vertex1, vertex2, vertex3, vertex4];        let minDistance = this["\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"];        for(let i=0;i<vertexs["\x6c\x65\x6e\x67\x74\x68"];i++) {            let vertex = vertexs[i];                        let distance = this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66\x50\x6f\x69\x6e\x74\x73"]({X:this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2, Y:this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2}, vertex);            if (distance < minDistance) {                minDistance = distance;                nearestVertex = vertex;            }        }        return nearestVertex;    }    checkIfNeedTurnDirection(direction) {        let copyOfTank = this["\x63\x6f\x70\x79\x4f\x66\x54\x61\x6e\x6b"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]);        copyOfTank["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = direction;        let point = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](1, copyOfTank, true);        if (point["\x58"] === copyOfTank["\x58"] && point["\x59"] === copyOfTank["\x59"]) {            direction = this["\x74\x75\x72\x6e\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x57\x68\x65\x6e\x43\x6f\x6c\x6c\x69\x64\x65"](direction);        }        return direction;    }    turnDirectionWhenCollide(direction) {        let finalDirection;        switch (direction) {            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]:            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]:                if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] < canvas["\x77\x69\x64\x74\x68"]/2) {                    finalDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                } else {                    finalDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                }                break;            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"]:            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]:                if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] < canvas["\x68\x65\x69\x67\x68\x74"]/2) {                    finalDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                } else {                    finalDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                }                break;        }        return finalDirection;    }    stopAndFire(dx, dy) {                let absDX = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy);        if (absDX > absDy) {            if (dx > 0) {                                if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"]) {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];                } else {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];                }            } else {                                if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]) {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];                } else {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];                }            }        } else {            if (dy > 0) {                if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]) {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];                } else {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];                }            } else {                if (this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] === this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]) {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];                } else {                    return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];                }            }        }    }    superAttack(dx, dy) {        if (this["\x73\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x6c\x65\x6e\x67\x74\x68"] > 0 && this["\x66\x69\x72\x73\x74\x41\x74\x74\x61\x63\x6b\x4c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] > 0) {            let index = this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] - this["\x66\x69\x72\x73\x74\x41\x74\x74\x61\x63\x6b\x4c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"];            if (index < this["\x73\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x6c\x65\x6e\x67\x74\x68"]) {                return this["\x73\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"][index];            } else {                this["\x73\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"] = [];                this["\x66\x69\x72\x73\x74\x41\x74\x74\x61\x63\x6b\x4c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] = 0;                this["\x69\x6e\x53\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x4d\x6f\x64\x65"] = false;            }        }         let absDX = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy);        let firstDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];        let afterDirections = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];                if (absDX > absDy) {            if (dx > 0) {                                firstDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];            } else {                                firstDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];            }            if (dy > 0) {                afterDirections = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];            } else {                afterDirections = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];            }        } else {            if (dy > 0) {                firstDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];            } else {                firstDirection = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];            }            if (dx > 0) {                afterDirections = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];            } else {                afterDirections = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];            }        }        for(let j=0;j<5;j++) {            this["\x73\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x70\x75\x73\x68"]([firstDirection, true]);            for(let i=0; i<6; i++) {                this["\x73\x75\x70\x65\x72\x41\x74\x74\x61\x63\x6b\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x70\x75\x73\x68"]([afterDirections, false]);                }        }        this["\x66\x69\x72\x73\x74\x41\x74\x74\x61\x63\x6b\x4c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"] = this["\x6c\x6f\x6f\x70\x43\x6f\x75\x6e\x74"];        return [firstDirection, true];    }    attack(dx, dy) {                let absDX = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy);                if (absDX > absDy) {            if (dx > 0) {                                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];            } else {                                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];            }        } else {            if (dy > 0) {                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];            } else {                return this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];            }        }    }    escapeForApproach(dx, dy) {        let direction;        let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dx);        let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](dy);        if (absDx >= absDy) {            if (dx > 0) {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];            } else {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];            }        } else {            if (dy > 0) {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];            } else {                direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];            }        }        return this["\x63\x68\x65\x63\x6b\x49\x66\x4e\x65\x65\x64\x54\x75\x72\x6e\x44\x69\x72\x65\x63\x74\x69\x6f\x6e"](direction);    }    goAndFire(dx, dy) {        let direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x53\x54\x4f\x50"];        if (dx >= this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"];        }        if (dx <= -this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"];        }        if (dy >= this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"];        }        if (dy <= -this["\x46\x49\x52\x45\x5f\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"]) {            direction = this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"];        }        return direction;    }    findNearestTank() {                let highestScore = -this["\x4d\x41\x58\x5f\x44\x49\x53\x54\x41\x4e\x43\x45"];                let distanceVer = canvas["\x68\x65\x69\x67\x68\x74"];        let distanceHor = canvas["\x77\x69\x64\x74\x68"];        let nearestTank;        for (let i = 0; i < this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"]["\x6c\x65\x6e\x67\x74\x68"]; i++) {            let tank = this["\x61\x6c\x6c\x45\x6e\x65\x6d\x79\x54\x61\x6e\x6b"][i];                        let dx = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x58"] - tank["\x58"];            let dy = this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"]["\x59"] - tank["\x59"];            let score = this["\x73\x63\x6f\x72\x65\x4f\x66\x54\x61\x6e\x6b"](tank);                        if (score > highestScore) {                highestScore = score;                distanceHor = dx;                distanceVer = dy;                nearestTank = tank;            }        }                return [distanceHor, distanceVer, nearestTank];    }    scoreOfTank(tank) {        let distance = this["\x67\x65\x74\x54\x61\x6e\x6b\x44\x69\x73\x74\x61\x6e\x63\x65"](this["\x73\x76\x4d\x79\x54\x61\x6e\x6b"], tank);        let minDistanceOfBoundLR = window["\x4d\x61\x74\x68"]["\x6d\x69\x6e"](tank["\x58"], canvas["\x77\x69\x64\x74\x68"] - tank["\x58"]);        let minDistanceOfBoundTB = window["\x4d\x61\x74\x68"]["\x6d\x69\x6e"](tank["\x59"], canvas["\x68\x65\x69\x67\x68\x74"] - tank["\x59"]);        let score = -distance + minDistanceOfBoundLR/8 + minDistanceOfBoundTB/6;        return score;    }    getTankDistance(tank1, tank2) {                let dx = tank1["\x58"] - tank2["\x58"];        let dy = tank1["\x59"] - tank2["\x59"];        let realDistance = window["\x4d\x61\x74\x68"]["\x73\x71\x72\x74"](window["\x4d\x61\x74\x68"]["\x70\x6f\x77"](dx, 2) + window["\x4d\x61\x74\x68"]["\x70\x6f\x77"](dy, 2));        return realDistance;    }    isBlockByMetal(tank1, tank2) {        if (!this["\x69\x73\x43\x6f\x75\x6e\x74\x65\x72\x53\x74\x72\x69\x6b\x65"]()) {            return false;        }                let delta = (this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]-this["\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"])/2;        let square1 = {X:tank1["\x58"]+delta, Y:tank1["\x59"]+delta, R:this["\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"]};        let square2 = {X:tank2["\x58"]+delta, Y:tank2["\x59"]+delta, R:this["\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"]};                let rects = this["\x67\x65\x74\x46\x6f\x75\x72\x52\x65\x63\x74\x4f\x66\x54\x77\x6f\x53\x71\x75\x61\x72\x65\x73"](square1, square2, this["\x42\x55\x4c\x4c\x45\x54\x5f\x57\x49\x44\x54\x48"]);                for(let i=0;i<rects["\x6c\x65\x6e\x67\x74\x68"];i++) {            let rect = rects[i];            for(let j=0;j<ametal["\x6c\x65\x6e\x67\x74\x68"];j++) {                let metal = ametal[j];                if (this["\x72\x65\x63\x74\x43\x6f\x6c\x6c\x69\x73\x69\x6f\x6e\x4d\x65\x74\x61\x6c"](rect["\x78\x31"], rect["\x79\x31"], rect["\x78\x32"], rect["\x79\x32"], metal)) {                    return true;                }            }        }        return false;    }        getFourRectOfTwoSquares(s1, s2, r) {        let dx = s1["\x58"] - s2["\x58"];        let dy = s1["\x59"] - s2["\x59"];                let tt, tp, tr, td;                let w = r;          if (dx > 0) {            if (dy > 0) {                tt = s2;                tp = s2;                tr = s1;                td = s1;            } else {                tt = s2;                tp = s1;                tr = s1;                td = s2;            }        } else {            if (dy > 0) {                tt = s1;                tp = s2;                tr = s2;                td = s1;            } else {                tt = s1;                tp = s1;                tr = s2;                td = s2;            }        }        let rect1 = {x1:tt["\x58"], y1:tp["\x59"], x2:tr["\x58"]+w, y2:tp["\x59"]+w};        let rect2 = {x1:tr["\x58"], y1:tp["\x59"], x2:tr["\x58"]+w, y2:td["\x59"]+w};        let rect3 = {x1:tt["\x58"], y1:td["\x59"], x2:tr["\x58"]+w, y2:td["\x59"]+w};        let rect4 = {x1:tt["\x58"], y1:tp["\x59"], x2:tt["\x58"]+w, y2:td["\x59"]+w};        return [rect1, rect2, rect3, rect4];    }    getDistanceOfPoints(point1, point2) {        return this["\x67\x65\x74\x44\x69\x73\x74\x61\x6e\x63\x65\x4f\x66"](point1["\x58"]-point2["\x58"], point1["\x59"]-point2["\x59"]);    }    calculateDistanceWithMetal(tank1, tank2, metal) {        let distance;        let dx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tank1["\x58"] - tank2["\x58"]);        let dy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tank1["\x59"] - tank2["\x59"]);        if (this["\x69\x73\x50\x6f\x69\x6e\x74\x52\x65\x61\x63\x68\x61\x62\x6c\x65"](tank1, tank2, metal)) {            distance = dx + dy;            return distance;        }        let points = this["\x66\x69\x6e\x64\x54\x77\x6f\x43\x6f\x6e\x6e\x65\x63\x74\x50\x6f\x69\x6e\x74"](tank1, metal);        if (points["\x6c\x65\x6e\x67\x74\x68"] !== 2) {            this["\x6c\x6f\x67"]("\x73\x68\x69\x74\x2c \u67e5\u95ee\u9898");            return 0;        }        let distances = [];        for(let i=0;i<points["\x6c\x65\x6e\x67\x74\x68"];i++) {            let point = points[i];            let dx1 = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tank1["\x58"] - point["\x58"]);            let dy1 = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tank1["\x59"] - point["\x59"]);            let dx2 = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tank2["\x58"] - point["\x58"]);            let dy2 = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](tank2["\x59"] - point["\x59"]);            let distance = dx1 + dy1 + dx2 + dy2;            distances["\x70\x75\x73\x68"](distance);        }        return window["\x4d\x61\x74\x68"]["\x6d\x69\x6e"]["\x61\x70\x70\x6c\x79"](null, distances);    }    findTwoConnectPoint(tank, metal) {        if (metal === undefined) {            return [];        }        let points = [];        let centerOfMetal = {X:metal[0]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2,Y:metal[1]+this["\x4d\x45\x54\x41\x4c\x5f\x57\x49\x44\x54\x48"]/2};        for(let i=0;i<this["\x73\x76\x4e\x6f\x53\x74\x6f\x70\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"]["\x6c\x65\x6e\x67\x74\x68"];i++) {            let direction = this["\x73\x76\x4e\x6f\x53\x74\x6f\x70\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x73"][i];            let copyOfTank = this["\x63\x6f\x70\x79\x4f\x66\x54\x61\x6e\x6b"](tank);            copyOfTank["\x64\x69\x72\x65\x63\x74\x69\x6f\x6e"] = direction;                        let lastImaginaryTank = {X:0, Y:0};            for(let step=1;step<=22;step++) {                let imaginaryTank = this["\x69\x6d\x61\x67\x69\x6e\x65\x4d\x6f\x76\x65"](step, copyOfTank, true);                if (imaginaryTank["\x58"] === lastImaginaryTank["\x58"] && imaginaryTank["\x59"] === lastImaginaryTank["\x59"]) {                                        break;                }                lastImaginaryTank = imaginaryTank;                let centerOfTank = {X:imaginaryTank["\x58"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2, Y:imaginaryTank["\x59"]+this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"]/2};                let absDx = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](centerOfTank["\x58"]-centerOfMetal["\x58"]);                let absDy = window["\x4d\x61\x74\x68"]["\x61\x62\x73"](centerOfTank["\x59"]-centerOfMetal["\x59"]);                if (this["\x69\x73\x49\x6e\x43\x6f\x6e\x6e\x65\x63\x74\x50\x6f\x69\x6e\x74\x41\x72\x65\x61"](absDx, absDy)) {                    points["\x70\x75\x73\x68"](imaginaryTank);                    break;                }            }        }        return points;    }        isPointReachable(originPoint, targetPoint, metal) {        if (metal === undefined) {            return true;        }                        let twoOtherPoints = this["\x67\x65\x74\x4f\x74\x68\x65\x72\x54\x77\x6f\x50\x6f\x69\x6e\x74\x73"](originPoint, targetPoint);        let reachable = false;        for(let i=0;i<twoOtherPoints["\x6c\x65\x6e\x67\x74\x68"];i++) {            let point = twoOtherPoints[i];            let rects = this["\x67\x65\x74\x54\x77\x6f\x52\x65\x63\x74\x73\x46\x72\x6f\x6d\x50\x6f\x69\x6e\x74"](point, originPoint, targetPoint);            let collide = false;            for(let j=0; j<rects["\x6c\x65\x6e\x67\x74\x68"];j++) {                let rect = rects[j];                if (this["\x72\x65\x63\x74\x43\x6f\x6c\x6c\x69\x73\x69\x6f\x6e\x4d\x65\x74\x61\x6c"](rect["\x78\x31"], rect["\x79\x31"], rect["\x78\x32"], rect["\x79\x32"], metal)) {                    collide = true;                    break;                }            }                        if (!collide) {                reachable = true;            }        }        return reachable;    }    getOtherTwoPoints(t1, t2) {        let p1 = {X:t2["\x58"], Y:t1["\x59"]};        let p2 = {X:t1["\x58"], Y:t2["\x59"]};        return [p1, p2];    }    getTwoRectsFromPoint(point, t1, t2) {        let w = this["\x54\x41\x4e\x4b\x5f\x57\x49\x44\x54\x48"];        let rect1, rect2;        if (t1["\x58"] === t2["\x58"] || t1["\x59"] === t2["\x59"]) {                        rect1 = {x1:point["\x58"], y1:point["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                        if (t1["\x59"] > t2["\x59"] || t1["\x58"] > t2["\x58"]) {                rect2 = {x1:t2["\x58"], y1:t2["\x59"], x2:t1["\x58"]+w, y2:t1["\x59"]+w};            } else {                rect2 = {x1:t1["\x58"], y1:t1["\x59"], x2:t2["\x58"]+w, y2:t2["\x59"]+w};            }        } else {            if (point["\x58"] === t1["\x58"]) {                if (point["\x59"] < t1["\x59"]) {                    if (point["\x58"] > t2["\x58"]) {                        rect1 = {x1:point["\x58"], y1:point["\x59"], x2:t1["\x58"]+w, y2:t1["\x59"]+w};                        rect2 = {x1:t2["\x58"], y1:t2["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                    } else {                        rect1 = {x1:point["\x58"], y1:point["\x59"], x2:t1["\x58"]+w, y2:t1["\x59"]+w};                        rect2 = {x1:point["\x58"], y1:point["\x59"], x2:t2["\x58"]+w, y2:t2["\x59"]+w};                    }                } else {                    if (point["\x58"] > t2["\x58"]) {                        rect1 = {x1:t1["\x58"], y1:t1["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                        rect2 = {x1:t2["\x58"], y1:t2["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                    } else {                        rect1 = {x1:t1["\x58"], y1:t1["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                        rect2 = {x1:point["\x58"], y1:point["\x59"], x2:t2["\x58"]+w, y2:t2["\x59"]+w};                    }                }            } else {                                if (point["\x59"] < t2["\x59"]) {                    if (point["\x58"] > t1["\x58"]) {                        rect1 = {x1:t1["\x58"], y1:t1["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                        rect2 = {x1:point["\x58"], y1:point["\x59"], x2:t2["\x58"]+w, y2:t2["\x59"]+w};                    } else {                        rect1 = {x1:point["\x58"], y1:point["\x59"], x2:t2["\x58"]+w, y2:t2["\x59"]+w};                        rect2 = {x1:point["\x58"], y1:point["\x59"], x2:t1["\x58"]+w, y2:t1["\x59"]+w};                    }                } else {                    if (point["\x58"] > t1["\x58"]) {                        rect1 = {x1:t1["\x58"], y1:t1["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                        rect2 = {x1:t2["\x58"], y1:t2["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                    } else {                        rect2 = {x1:point["\x58"], y1:point["\x59"], x2:t1["\x58"]+w, y2:t1["\x59"]+w};                        rect1 = {x1:t2["\x58"], y1:t2["\x59"], x2:point["\x58"]+w, y2:point["\x59"]+w};                    }                }            }        }        return [rect1, rect2];    }        SVMove(direction) {        if (typeof direction === undefined) return;        this["\x73\x76\x4d\x6f\x76\x65\x45\x76"]["\x6b\x65\x79\x43\x6f\x64\x65"] = this["\x53\x56\x47\x65\x74\x44\x69\x72\x65\x63\x74\x69\x6f\x6e\x4b\x65\x79\x43\x6f\x64\x65"](direction);        window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]["\x6f\x6e\x6b\x65\x79\x64\x6f\x77\x6e"](this["\x73\x76\x4d\x6f\x76\x65\x45\x76"]);    }        SVFire() {        let now = (new window["\x44\x61\x74\x65"]())["\x76\x61\x6c\x75\x65\x4f\x66"]();        if (now - this["\x66\x69\x72\x65\x74\x69\x6d\x65\x73\x74\x61\x6d\x70"] >= this["\x4d\x49\x4e\x5f\x46\x49\x52\x45\x5f\x49\x4e\x54\x45\x52\x56\x41\x4c"]) {            this["\x66\x69\x72\x65\x74\x69\x6d\x65\x73\x74\x61\x6d\x70"] = now;            this["\x73\x76\x46\x69\x72\x65\x45\x76"]["\x6b\x65\x79\x43\x6f\x64\x65"] = this["\x73\x76\x54\x79\x70\x65"] === "\x41" ? 32 : 8;            window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]["\x6f\x6e\x6b\x65\x79\x64\x6f\x77\x6e"](this["\x73\x76\x46\x69\x72\x65\x45\x76"]);        }    }        SVGetDirectionKeyCode(direction) {        switch (direction) {            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]:                return this["\x73\x76\x54\x79\x70\x65"] === "\x41" ? 87 : 38;            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]:                return this["\x73\x76\x54\x79\x70\x65"] === "\x41" ? 83 : 40;            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"]:                return this["\x73\x76\x54\x79\x70\x65"] === "\x41" ? 65 : 37;            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]:                return this["\x73\x76\x54\x79\x70\x65"] === "\x41" ? 68 : 39;        }    }    SVGetDirectionStr(direction) {        switch (direction) {            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x55\x50"]:                return "\x55\x50";            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x44\x4f\x57\x4e"]:                return "\x44\x4f\x57\x4e";            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x4c\x45\x46\x54"]:                return "\x4c\x45\x46\x54";            case this["\x44\x49\x52\x45\x43\x54\x49\x4f\x4e"]["\x52\x49\x47\x48\x54"]:                return "\x52\x49\x47\x48\x54";            default:                return "\x53\x54\x4f\x50";        }    }    isCounterStrike() {        return ametal["\x6c\x65\x6e\x67\x74\x68"] > 0;    }    rectCollisionMetal(x1, y1, x2, y2, metal) {        if (metal === undefined) {            return false;        }        let dx = x2-x1;        let dy = y2-y1;                if(x1>metal[0] - dx && x1 < metal[0] + metal[2] && y1 > metal[1]-dy && y1<metal[1] + metal[3]) {            return true;        }        return false;    }    collisionMetal(x,y,r) {                const metal = ametal;        if(metal["\x6c\x65\x6e\x67\x74\x68"] > 0) {            for(var TRkBnwv8 = 0;TRkBnwv8<metal["\x6c\x65\x6e\x67\x74\x68"];TRkBnwv8++) {                if(x>metal[TRkBnwv8][0] - r && x < metal[TRkBnwv8][0] + metal[TRkBnwv8][2] && y > metal[TRkBnwv8][1]-r && y<metal[TRkBnwv8][1] + metal[TRkBnwv8][3])                {                    return true;                }            }        }        return false;    }

    log(...data) {
        if (this.DEBUG) {
            console.log(data.join(' '));

        }
    }

    error(...data) {
        if (this.DEBUG) {
            console.error(data.join(' '));
        }
    }

    setName() {
        document.getElementById(
            `Player${this.type === "A" ? 1 : 2}barName`
          ).value = "闪电"
        document.getElementById(
        `Player${this.type === "A" ? 1 : 2}Name`
        ).textContent = "闪电"
    }

    
})("A");